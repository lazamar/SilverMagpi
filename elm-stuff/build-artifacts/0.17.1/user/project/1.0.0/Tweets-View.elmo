var _user$project$Tweets_View$errorMessage = function (error) {
	var _p0 = error;
	switch (_p0.ctor) {
		case 'Timeout':
			return 'The server didn\'t respond on time.';
		case 'NetworkError':
			return 'Unable to connect to server';
		case 'UnexpectedPayload':
			return A2(_elm_lang$core$Basics_ops['++'], 'Unable to parse server response: ', _p0._0);
		default:
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'Server returned ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(_p0._0),
					A2(_elm_lang$core$Basics_ops['++'], '. ', _p0._1)));
	}
};
var _user$project$Tweets_View$errorView = function (err) {
	var _p1 = err;
	if (_p1.ctor === 'Nothing') {
		return _elm_lang$html$Html$text('');
	} else {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$class('Tweets-error animated fadeInDown')
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text(
					_user$project$Tweets_View$errorMessage(_p1._0))
				]));
	}
};
var _user$project$Tweets_View$tweetView = function (tweet) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('Tweet')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$img,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('Tweet-userImage'),
						_elm_lang$html$Html_Attributes$src(tweet.user.profile_image_url_https)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('Tweet-userInfoContainer')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$a,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('Tweet-userName'),
										_elm_lang$html$Html_Attributes$href(
										A2(_elm_lang$core$Basics_ops['++'], '@', tweet.user.screen_name))
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(tweet.user.name)
									])),
								A2(
								_elm_lang$html$Html$a,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('Tweet-userHandler'),
										_elm_lang$html$Html_Attributes$href(
										A2(_elm_lang$core$Basics_ops['++'], 'https://twitter.com/', tweet.user.screen_name))
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(
										A2(_elm_lang$core$Basics_ops['++'], '@', tweet.user.screen_name))
									]))
							])),
						A2(
						_elm_lang$html$Html$p,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('Tweet-text')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(tweet.text)
							]))
					]))
			]));
};
var _user$project$Tweets_View$tweetListView = function (tweets) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		A2(_elm_lang$core$List$map, _user$project$Tweets_View$tweetView, tweets));
};
var _user$project$Tweets_View$root = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('Tweets')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Tweets_View$errorView(model.error),
				_user$project$Tweets_View$tweetListView(model.tweets)
			]));
};
